<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<bean id="customAccessDenied" class="org.zerock.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean>


	<!-- 스프링 시큐리티가 인증하지 않도록 하기 위한 빈의 정의 -->
	<!-- sec:http 요소가 여러개 정의돼 있다면 정의한 순서대로 경로 패턴을 매치하기때문에 none 요소를 맨 위에 둔다 -->
	<!-- <sec:http pattern="/resources/**" security="none"/> -->

	<!-- root context를 붙여서 쓸 필요는 없다! -->
	<security:http auto-config ="true" use-expressions="true">
		<security:intercept-url pattern="/sample/all"	access="permitAll"/>
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
	
		<!-- <security:form-login/> -->
		
		<security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess" />
		
	<!-- 	<security:access-denied-handler error-page="/accessError/"/> -->
	<!--  errorpage 속성 대신 CustomAccessDeniedHandler를 빈으로 등록해서 사용함 -->
	<security:access-denied-handler ref="customAccessDenied"/>
	
	<security:logout logout-url="/customLogout" invalidate-session="true"/>

	
	</security:http>
	
	
	<!-- 인증용 컴포넌트 빈으로, 이 요소를 정의하지 않으면 서버를 기동할 때 오류가 발생한다 -->
	<security:authentication-manager>
	
		<security:authentication-provider>
			<security:user-service>
			
				<security:user name="member"
				password="{noop}member" authorities="ROLE_MEMBER"/>
			
				<security:user name="admin" 
				password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
			
			</security:user-service>
			
			
			
			
		</security:authentication-provider>
	
	
	</security:authentication-manager>



</beans>
